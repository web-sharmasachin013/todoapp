{"version":3,"sources":["components/CreateTask.js","components/TaskItem.js","components/TaskList.js","components/Main.js","App.js","index.js"],"names":["CreateTask","props","state","task","handleSubmit","bind","handleChange","evt","this","setState","target","value","preventDefault","createTask","onSubmit","type","onChange","className","Component","TaskItem","deleteTask","taskItem","taskName","isEditing","toggleTask","id","editing","event","editTask","colSpan","style","float","onClick","setIsEditing","class","readOnly","checked","isCompleted","TaskList","tasks","map","t","index","Main","trim","newTask","allTasks","alert","arr","filter","console","log","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f615592.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./CreateTask.css\";\r\nexport default class CreateTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { task: \"\" };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  handleChange(evt) {\r\n    this.setState({ task: evt.target.value });\r\n  }\r\n  handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    this.props.createTask(this.state.task);\r\n    this.setState({ task: \"\" });\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={this.state.task}\r\n          onChange={this.handleChange}\r\n        />\r\n        <button className=\"add\">Add Task</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./TaskItem.css\";\r\nexport default class TaskItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.deleteTask = this.deleteTask.bind(this);\r\n    this.state = { task: this.props.taskItem.taskName, isEditing: false };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.toggleTask = this.toggleTask.bind(this);\r\n  }\r\n  deleteTask() {\r\n    this.props.deleteTask(this.props.id);\r\n  }\r\n\r\n  setIsEditing(editing) {\r\n    this.setState({ isEditing: editing });\r\n  }\r\n  handleChange(event) {\r\n    this.setState({ task: event.target.value });\r\n  }\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.props.editTask(this.props.id, this.state.task);\r\n    this.setState({ isEditing: false });\r\n  }\r\n  toggleTask() {\r\n    this.props.toggleTask(this.props.id);\r\n  }\r\n  render() {\r\n    let result;\r\n    if (this.state.isEditing) {\r\n      result = (\r\n        <tr>\r\n          <td colSpan=\"2\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.task}\r\n                onChange={this.handleChange}\r\n              />\r\n              <span style={{ float: \"right\" }}>\r\n                <button className=\"save task\">Save</button>\r\n                <button\r\n                  className=\"back task\"\r\n                  onClick={() => this.setIsEditing(false)}\r\n                >\r\n                  Back\r\n                </button>\r\n              </span>\r\n            </form>\r\n          </td>\r\n        </tr>\r\n      );\r\n    } else {\r\n      result = (\r\n        <tr>\r\n          <td onClick={this.toggleTask} class=\"task\">\r\n            <input\r\n              type=\"checkbox\"\r\n              readOnly\r\n              checked={this.props.taskItem.isCompleted}\r\n            />\r\n            <span\r\n              className={\r\n                this.props.taskItem.isCompleted ? \"completed\" : \"not-completed\"\r\n              }\r\n            >\r\n              {this.props.taskItem.taskName}\r\n            </span>\r\n          </td>\r\n          <td className=\"Actions\">\r\n            <button\r\n              className=\"edit task\"\r\n              onClick={() => this.setIsEditing(true)}\r\n            >\r\n              Edit\r\n            </button>\r\n            <button className=\"delete task\" onClick={this.deleteTask}>\r\n              Delete\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      );\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TaskItem from \"./TaskItem\";\r\nimport \"./TaskList.css\";\r\nexport default class TaskList extends Component {\r\n  render() {\r\n    return (\r\n      <table className=\"TodoList\">\r\n        <thead>\r\n          <tr>\r\n            <th>Task</th>\r\n            <th className=\"Actions\">Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.props.tasks.map((t, index) => {\r\n            return (\r\n              <TaskItem\r\n                key={index}\r\n                taskItem={t}\r\n                id={index}\r\n                deleteTask={this.props.deleteTask}\r\n                editTask={this.props.editTask}\r\n                toggleTask={this.props.toggleTask}\r\n              />\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport CreateTask from \"./CreateTask\";\r\nimport TaskList from \"./TaskList\";\r\nimport \"./Main.css\";\r\nexport default class Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { tasks: [] };\r\n    this.createTask = this.createTask.bind(this);\r\n    this.deleteTask = this.deleteTask.bind(this);\r\n    this.editTask = this.editTask.bind(this);\r\n    this.toggleTask = this.toggleTask.bind(this);\r\n  }\r\n  createTask(task) {\r\n    if (task.trim() === \"\") {\r\n      alert(\"Task cannot be empty\");\r\n      return;\r\n    }\r\n    let newTask = { taskName: task.trim(), isCompleted: false };\r\n    let allTasks = [...this.state.tasks, newTask];\r\n    this.setState({ tasks: allTasks });\r\n  }\r\n  deleteTask(id) {\r\n    let arr = this.state.tasks.filter((t, index) => index !== id);\r\n    this.setState({ tasks: arr });\r\n  }\r\n  editTask(index, value) {\r\n    console.log(\"editTask called\");\r\n    let arr = [...this.state.tasks];\r\n    arr[index].taskName = value;\r\n    this.setState({ tasks: arr });\r\n  }\r\n  toggleTask(index) {\r\n    let arr = [...this.state.tasks];\r\n    arr[index].isCompleted = !arr[index].isCompleted;\r\n    this.setState({ tasks: arr });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Main\">\r\n        <h1>Todo List</h1>\r\n        <div className=\"content\">\r\n          <CreateTask createTask={this.createTask} />\r\n\r\n          <TaskList\r\n            tasks={this.state.tasks}\r\n            deleteTask={this.deleteTask}\r\n            editTask={this.editTask}\r\n            toggleTask={this.toggleTask}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import Main from \"./components/Main\";\nfunction App() {\n  return (\n    <div>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}